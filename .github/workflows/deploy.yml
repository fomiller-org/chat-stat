# .github/workflows/deploy.yml

name: 'Terragrunt Deploy'
  
on:
  push:
    paths:
      - '.github/**'
      - 'modules/**'
      - 'infra/**'
      - 'src/**'
      - 'justfile'
      - 'dockerfile*'
      - 'go.mod'
      - 'go.sum'
   
jobs:
  Pre-check:
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    outputs:
      should_skip: ${{ steps.skip_check.outputs.should_skip }}
    steps:
      - id: skip_check
        uses: fkirc/skip-duplicate-actions@v5
        with:
          cancel_others: 'true'
          concurrent_skipping: 'same_content_newer'
            
  Build-lambda-twitch-event-sub:
    name: 'Build lambda twitch-event-sub'
    needs: Pre-check
    uses: fomiller/gh-actions/.github/workflows/rust-lambda.yaml@main
    with:
      lambda_dir: src/lambdas/twitcheventsub
      lambda_output:  infra/modules/aws/lambda/bin/
      artifacts_dir: infra/modules/aws/lambda/bin
      # conditionally build lambdas if these files change
      src-filters: |
        lambda:
          - 'src/lambdas/twitcheventsub/**'
          - 'infra/modules/aws/lambda/**'
        
  Build-lambda-twitch-event-sub-webhook:
    name: 'Build lambda twitch-event-sub-webhook'
    needs: Pre-check
    uses: fomiller/gh-actions/.github/workflows/rust-lambda.yaml@main
    with:
      lambda_dir: src/lambdas/twitcheventsubwebhook
      lambda_output:  infra/modules/aws/lambda/bin/
      artifacts_dir: infra/modules/aws/lambda/bin
      # conditionally build lambdas if these files change
      src-filters: |
        lambda:
          - 'src/lambdas/twitcheventsubwebhook/**'
          - 'infra/modules/aws/lambda/**'
        
  Build-lambda-twitch-record-manager:
    name: 'Build lambda twitch-record-manager'
    needs: Pre-check
    uses: fomiller/gh-actions/.github/workflows/rust-lambda.yaml@main
    with:
      lambda_dir: src/lambdas/twitchrecordmanager
      lambda_output:  infra/modules/aws/lambda/bin/
      artifacts_dir: infra/modules/aws/lambda/bin
      # conditionally build lambdas if these files change
      src-filters: |
        lambda:
          - 'src/lambdas/twitchrecordmanager/**'
          - 'infra/modules/aws/lambda/**'
        
  Deploy-infra:
    name: 'Deploy Infra'
    needs: 
      - Build-lambda-twitch-event-sub
      - Build-lambda-twitch-event-sub-webhook
      - Build-lambda-twitch-record-manager
    uses: fomiller/gh-actions/.github/workflows/terragrunt.yaml@main
    with:
      environment: ${{ contains(fromJSON('["refs/heads/main", "refs/heads/master"]'), github.ref) && 'prod' || 'dev' }}
      infra-dir: infra/modules/aws
      doppler-project: chat-stat
      download-artifacts: true
      artifacts_dir: infra/modules/aws/lambda/bin
    secrets: inherit
        
  Build-chat-stat-logger-image:
    name: 'Build/Deploy ECR chat-stat-logger image'
    needs: Deploy-infra
    uses: fomiller/gh-actions/.github/workflows/ecr.yaml@main
    with:
      environment: ${{ contains(fromJSON('["refs/heads/main", "refs/heads/master"]'), github.ref) && 'prod' || 'dev' }}
      repo: logger
      repo-prefix: "fomiller-chat-stat"
      src-filters: |
        docker:
          - 'dockerfile'
          - 'src/cmd/app/**'
          - 'src/internal/**'
    secrets: inherit
     
  Build-chat-stat-api-image:
    name: 'Build/Deploy ECR chat-stat-api image'
    needs: Deploy-infra
    uses: fomiller/gh-actions/.github/workflows/ecr.yaml@main
    with:
      environment: ${{ contains(fromJSON('["refs/heads/main", "refs/heads/master"]'), github.ref) && 'prod' || 'dev' }}
      repo: api
      repo-prefix: "fomiller-chat-stat"
      dockerfile: dockerfile.api
      platforms: '["linux/amd64"]'
      src-filters: |
        docker:
          - 'dockerfile.api'
          - 'src/api/**'
    secrets: inherit
      
  Build-chat-stat-frontend-image:
    name: 'Build/Deploy ECR chat-stat-frontend image'
    needs: Deploy-infra
    uses: fomiller/gh-actions/.github/workflows/ecr.yaml@main
    with:
      environment: ${{ contains(fromJSON('["refs/heads/main", "refs/heads/master"]'), github.ref) && 'prod' || 'dev' }}
      repo: frontend
      repo-prefix: "fomiller-chat-stat"
      dockerfile: dockerfile.frontend
      platforms: '["linux/amd64"]'
      src-filters: |
        docker:
          - 'dockerfile.frontend'
          - 'src/frontend/**'
    secrets: inherit
    
    # use if you need to debug workflow
    # - name: DEBUG
    #   uses: lhotari/action-upterm@v1
    #   with:
    #       limit-access-to-actor: true
    #       limit-access-to-users: Fomiller

      
